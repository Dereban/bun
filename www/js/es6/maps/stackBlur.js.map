{"version":3,"sources":["stackBlur.ts"],"names":[],"mappings":";;;QAyCM,SAAS,EAmBT,SAAS;IAmBf,oBACC,MAAyB,EACzB,KAAa,EACb,KAAa,EACb,KAAa,EACb,MAAc,EACd,MAAc;QAEd,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjC,MAAM,CAAA;QACP,CAAC;QACD,MAAM,IAAI,CAAC,CAAA;QAEX,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,EACtC,SAAS,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC,EAC7D,MAAM,GAAG,SAAS,CAAC,IAAI,CAAA;QAExB,IAAI,CAAS,EACZ,CAAS,EACT,CAAS,EACT,CAAS,EACT,EAAU,EACV,EAAU,EACV,EAAU,EACV,KAAa,EACb,KAAa,EACb,KAAa,EACb,KAAa,EACb,SAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,SAAiB,EACjB,QAAgB,EAChB,QAAgB,EAChB,QAAgB,EAChB,QAAgB,EAChB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,EACV,GAAW,CAAA;QAGZ,MAAM,GAAG,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,EAC9B,WAAW,GAAI,KAAK,GAAG,CAAC,EACxB,YAAY,GAAG,MAAM,GAAG,CAAC,EACzB,WAAW,GAAI,MAAM,GAAG,CAAC,EACzB,SAAS,GAAG,WAAW,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA;QAEhD,MAAM,UAAU,GAAG,IAAI,SAAS,EAAE,CAAA;QAClC,IAAI,KAAK,GAAG,UAAU,EACrB,QAAmB,CAAA;QACpB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1B,KAAK,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,SAAS,EAAE,CAAA;YACpC,EAAE,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAC,CAAC;gBACtB,QAAQ,GAAG,KAAK,CAAA;YACjB,CAAC;QACF,CAAC;QACD,KAAK,CAAC,IAAI,GAAG,UAAU,CAAA;QACvB,IAAI,OAAkB,EACrB,QAAmB,CAAA;QAEpB,EAAE,GAAG,EAAE,GAAG,CAAC,CAAA;QAEX,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,EAChC,OAAO,GAAG,SAAS,CAAC,MAAM,CAAC,CAAA;QAE5B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;kBAC9D,KAAK,GAAG,CAAC,CAAA;YAEZ,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAC7C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAC7C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAE7C,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YAEvB,KAAK,GAAG,UAAU,CAAA;YAElB,GAAG,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,GAAG,KAAK,CAAC,IAAI,CAAA;YACnB,CAAC;YAED,GAAG,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,WAAW,GAAG,CAAC,GAAG,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,CAAE,CAAA;gBACpD,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC,CAAA;gBAC/D,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC9C,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBAC7C,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBAE7C,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBAEd,KAAK,GAAG,KAAK,CAAC,IAAI,CAAA;YACnB,CAAC;YAGD,OAAO,GAAG,UAAU,CAAA;YACpB,QAAQ,GAAG,QAAQ,CAAA;YACnB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC5B,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAA;gBAChD,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;oBACb,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;oBACd,MAAM,CAAC,EAAE,CAAC,GAAK,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;oBAClD,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;oBAClD,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,CAAA;gBAC7C,CAAC;gBAED,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAElB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBAEtB,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,WAAW,GAAG,CAAC,GAAG,WAAW,CAAC,CAAC;uBAC7D,CAAC,CAAA;gBAEL,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;gBACnC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA;gBACrC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA;gBACrC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA;gBAErC,KAAK,IAAI,QAAQ,CAAA;gBACjB,KAAK,IAAI,QAAQ,CAAA;gBACjB,KAAK,IAAI,QAAQ,CAAA;gBACjB,KAAK,IAAI,QAAQ,CAAA;gBAEjB,OAAO,GAAG,OAAO,CAAC,IAAI,CAAA;gBAEtB,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAE9B,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBAEd,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAA;gBAExB,EAAE,IAAI,CAAC,CAAA;YACR,CAAC;YACD,EAAE,IAAI,KAAK,CAAA;QACZ,CAAC;QAGD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC;YAC5B,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,KAAK,GAAG,KAAK,GAAG,KAAK;kBAC9D,KAAK,GAAG,CAAC,CAAA;YAEZ,EAAE,GAAG,CAAC,IAAI,CAAC,CAAA;YACX,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAA;YAC3C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAC7C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAC7C,SAAS,GAAG,WAAW,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAA;YAE7C,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YACvB,KAAK,IAAI,SAAS,GAAG,EAAE,CAAA;YAEvB,KAAK,GAAG,UAAU,CAAA;YAElB,GAAG,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC;gBACjC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,CAAC,CAAC,GAAG,EAAE,CAAA;gBACZ,KAAK,GAAG,KAAK,CAAC,IAAI,CAAA;YACnB,CAAC;YAED,EAAE,GAAG,KAAK,CAAA;YAEV,GAAG,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7B,EAAE,GAAG,CAAE,EAAE,GAAG,CAAC,CAAE,IAAI,CAAC,CAAA;gBAEpB,KAAK,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,WAAW,GAAG,CAAC,CAAC,CAAA;gBAChE,KAAK,IAAI,CAAE,KAAK,CAAC,CAAC,GAAG,CAAE,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBAChD,KAAK,IAAI,CAAE,KAAK,CAAC,CAAC,GAAG,CAAE,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBAChD,KAAK,IAAI,CAAE,KAAK,CAAC,CAAC,GAAG,CAAE,EAAE,GAAG,MAAM,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAA;gBAChD,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBAEd,KAAK,GAAG,KAAK,CAAC,IAAI,CAAA;gBAElB,EAAE,CAAA,CAAC,CAAC,GAAG,YAAY,CAAC,CAAC,CAAC;oBACrB,EAAE,IAAI,KAAK,CAAA;gBACZ,CAAC;YACF,CAAC;YAED,EAAE,GAAG,CAAC,CAAA;YACN,OAAO,GAAG,UAAU,CAAA;YACpB,QAAQ,GAAG,QAAQ,CAAA;YACnB,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC7B,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;gBACX,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAA;gBAC/C,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;oBACZ,EAAE,GAAG,GAAG,GAAG,EAAE,CAAA;oBACb,MAAM,CAAC,CAAC,CAAC,GAAK,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;oBACjD,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;oBACjD,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,CAAA;gBAClD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,CAAA;gBAC1C,CAAC;gBAED,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAClB,KAAK,IAAI,SAAS,CAAA;gBAElB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBACtB,SAAS,IAAI,OAAO,CAAC,CAAC,CAAA;gBAEtB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAE,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,YAAY;oBAC/C,CAAC,GAAG,YAAY,CAAE,GAAG,KAAK,CAAC,CAAC,IAAI,CAAC,CAAA;gBAElC,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gBAC9C,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gBAChD,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA;gBAEhD,OAAO,GAAG,OAAO,CAAC,IAAI,CAAA;gBAEtB,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAC9B,SAAS,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAA;gBAE9B,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBACd,QAAQ,IAAI,EAAE,CAAA;gBAEd,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAA;gBAExB,EAAE,IAAI,KAAK,CAAA;YACZ,CAAC;QACF,CAAC;QAED,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,CAAA;IAC9C,CAAC;IArQD,gCAqQC,CAAA;;;;YA3SK,SAAS,GAAG;gBACjB,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;gBAC/D,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG;aAC3D,CAAA;YAEK,SAAS,GAAG;gBACjB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC7D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;gBAC9D,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;aAC1D,CAAA;YAyQD;gBAMC;oBALA,MAAC,GAAW,CAAC,CAAA;oBACb,MAAC,GAAW,CAAC,CAAA;oBACb,MAAC,GAAW,CAAC,CAAA;oBACb,MAAC,GAAW,CAAC,CAAA;gBAEE,CAAC;YACjB,CAAC;YAAA","file":"stackBlur.js","sourcesContent":["/*\n\n StackBlur - a fast almost Gaussian Blur For Canvas\n\n Version: \t0.5\n Author:\t\tMario Klingemann\n Contact: \tmario@quasimondo.com\n Website:\thttp://www.quasimondo.com/StackBlurForCanvas\n Twitter:\t@quasimondo\n\n In case you find this class useful - especially in commercial projects -\n I am not totally unhappy for a small donation to my PayPal account\n mario@quasimondo.de\n\n Or support me on flattr:\n https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n Copyright (c) 2010 Mario Klingemann\n\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n */\n\nconst mul_table = [\n\t512,512,456,512,328,456,335,512,405,328,271,456,388,335,292,512,\n\t454,405,364,328,298,271,496,456,420,388,360,335,312,292,273,512,\n\t482,454,428,405,383,364,345,328,312,298,284,271,259,496,475,456,\n\t437,420,404,388,374,360,347,335,323,312,302,292,282,273,265,512,\n\t497,482,468,454,441,428,417,405,394,383,373,364,354,345,337,328,\n\t320,312,305,298,291,284,278,271,265,259,507,496,485,475,465,456,\n\t446,437,428,420,412,404,396,388,381,374,367,360,354,347,341,335,\n\t329,323,318,312,307,302,297,292,287,282,278,273,269,265,261,512,\n\t505,497,489,482,475,468,461,454,447,441,435,428,422,417,411,405,\n\t399,394,389,383,378,373,368,364,359,354,350,345,341,337,332,328,\n\t324,320,316,312,309,305,301,298,294,291,287,284,281,278,274,271,\n\t268,265,262,259,257,507,501,496,491,485,480,475,470,465,460,456,\n\t451,446,442,437,433,428,424,420,416,412,408,404,400,396,392,388,\n\t385,381,377,374,370,367,363,360,357,354,350,347,344,341,338,335,\n\t332,329,326,323,320,318,315,312,310,307,304,302,299,297,294,292,\n\t289,287,285,282,280,278,275,273,271,269,267,265,263,261,259\n]\n\nconst shg_table = [\n\t9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17,\n\t17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19,\n\t19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20,\n\t20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21,\n\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21,\n\t21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22,\n\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22,\n\t22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23,\n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23,\n\t23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24,\n\t24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24\n]\n\nexport default function blurCanvas(\n\tcanvas: HTMLCanvasElement,\n\ttop_x: number,\n\ttop_y: number,\n\twidth: number,\n\theight: number,\n\tradius: number\n) {\n\tif (isNaN(radius) || radius < 1) {\n\t\treturn\n\t}\n\tradius |= 0\n\n\tconst context = canvas.getContext(\"2d\"),\n\t\timageData = context.getImageData(top_x, top_y, width, height),\n\t\tpixels = imageData.data\n\n\tlet x: number,\n\t\ty: number,\n\t\ti: number,\n\t\tp: number,\n\t\typ: number,\n\t\tyi: number,\n\t\tyw: number,\n\t\tr_sum: number,\n\t\tg_sum: number,\n\t\tb_sum: number,\n\t\ta_sum: number,\n\t\tr_out_sum: number,\n\t\tg_out_sum: number,\n\t\tb_out_sum: number,\n\t\ta_out_sum: number,\n\t\tr_in_sum: number,\n\t\tg_in_sum: number,\n\t\tb_in_sum: number,\n\t\ta_in_sum: number,\n\t\tpr: number,\n\t\tpg: number,\n\t\tpb: number,\n\t\tpa: number,\n\t\trbs: number\n\n\n\tconst div = radius + radius + 1,\n\t\twidthMinus1  = width - 1,\n\t\theightMinus1 = height - 1,\n\t\tradiusPlus1  = radius + 1,\n\t\tsumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2\n\n\tconst stackStart = new BlurStack()\n\tlet stack = stackStart,\n\t\tstackEnd: BlurStack\n\tfor (i = 1; i < div; i++) {\n\t\tstack = stack.next = new BlurStack()\n\t\tif (i == radiusPlus1) {\n\t\t\tstackEnd = stack\n\t\t}\n\t}\n\tstack.next = stackStart\n\tlet stackIn: BlurStack,\n\t\tstackOut: BlurStack\n\n\tyw = yi = 0\n\n\tconst mul_sum = mul_table[radius],\n\t\tshg_sum = shg_table[radius]\n\n\tfor (y = 0; y < height; y++) {\n\t\tr_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum\n\t\t\t= a_sum = 0\n\n\t\tr_out_sum = radiusPlus1 * (pr = pixels[yi])\n\t\tg_out_sum = radiusPlus1 * (pg = pixels[yi+1])\n\t\tb_out_sum = radiusPlus1 * (pb = pixels[yi+2])\n\t\ta_out_sum = radiusPlus1 * (pa = pixels[yi+3])\n\n\t\tr_sum += sumFactor * pr\n\t\tg_sum += sumFactor * pg\n\t\tb_sum += sumFactor * pb\n\t\ta_sum += sumFactor * pa\n\n\t\tstack = stackStart\n\n\t\tfor(i = 0; i < radiusPlus1; i++) {\n\t\t\tstack.r = pr\n\t\t\tstack.g = pg\n\t\t\tstack.b = pb\n\t\t\tstack.a = pa\n\t\t\tstack = stack.next\n\t\t}\n\n\t\tfor(i = 1; i < radiusPlus1; i++) {\n\t\t\tp = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2 )\n\t\t\tr_sum += (stack.r = (pr = pixels[p])) * (rbs = radiusPlus1 - i)\n\t\t\tg_sum += (stack.g = (pg = pixels[p+1])) * rbs;\n\t\t\tb_sum += (stack.b = (pb = pixels[p+2])) * rbs\n\t\t\ta_sum += (stack.a = (pa = pixels[p+3])) * rbs\n\n\t\t\tr_in_sum += pr\n\t\t\tg_in_sum += pg\n\t\t\tb_in_sum += pb\n\t\t\ta_in_sum += pa\n\n\t\t\tstack = stack.next\n\t\t}\n\n\n\t\tstackIn = stackStart\n\t\tstackOut = stackEnd\n\t\tfor (x = 0; x < width; x++) {\n\t\t\tpixels[yi+3] = pa = (a_sum * mul_sum) >> shg_sum\n\t\t\tif (pa != 0) {\n\t\t\t\tpa = 255 / pa;\n\t\t\t\tpixels[yi]   = ((r_sum * mul_sum) >> shg_sum) * pa\n\t\t\t\tpixels[yi+1] = ((g_sum * mul_sum) >> shg_sum) * pa\n\t\t\t\tpixels[yi+2] = ((b_sum * mul_sum) >> shg_sum) * pa\n\t\t\t} else {\n\t\t\t\tpixels[yi] = pixels[yi+1] = pixels[yi+2] = 0\n\t\t\t}\n\n\t\t\tr_sum -= r_out_sum\n\t\t\tg_sum -= g_out_sum\n\t\t\tb_sum -= b_out_sum\n\t\t\ta_sum -= a_out_sum\n\n\t\t\tr_out_sum -= stackIn.r\n\t\t\tg_out_sum -= stackIn.g\n\t\t\tb_out_sum -= stackIn.b\n\t\t\ta_out_sum -= stackIn.a\n\n\t\t\tp = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1))\n\t\t\t\t<< 2\n\n\t\t\tr_in_sum += (stackIn.r = pixels[p])\n\t\t\tg_in_sum += (stackIn.g = pixels[p+1])\n\t\t\tb_in_sum += (stackIn.b = pixels[p+2])\n\t\t\ta_in_sum += (stackIn.a = pixels[p+3])\n\n\t\t\tr_sum += r_in_sum\n\t\t\tg_sum += g_in_sum\n\t\t\tb_sum += b_in_sum\n\t\t\ta_sum += a_in_sum\n\n\t\t\tstackIn = stackIn.next\n\n\t\t\tr_out_sum += (pr = stackOut.r)\n\t\t\tg_out_sum += (pg = stackOut.g)\n\t\t\tb_out_sum += (pb = stackOut.b)\n\t\t\ta_out_sum += (pa = stackOut.a)\n\n\t\t\tr_in_sum -= pr\n\t\t\tg_in_sum -= pg\n\t\t\tb_in_sum -= pb\n\t\t\ta_in_sum -= pa\n\n\t\t\tstackOut = stackOut.next\n\n\t\t\tyi += 4\n\t\t}\n\t\tyw += width\n\t}\n\n\n\tfor (x = 0; x < width; x++) {\n\t\tg_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum\n\t\t\t= r_sum = 0\n\n\t\tyi = x << 2\n\t\tr_out_sum = radiusPlus1 * (pr = pixels[yi])\n\t\tg_out_sum = radiusPlus1 * (pg = pixels[yi+1])\n\t\tb_out_sum = radiusPlus1 * (pb = pixels[yi+2])\n\t\ta_out_sum = radiusPlus1 * (pa = pixels[yi+3])\n\n\t\tr_sum += sumFactor * pr\n\t\tg_sum += sumFactor * pg\n\t\tb_sum += sumFactor * pb\n\t\ta_sum += sumFactor * pa\n\n\t\tstack = stackStart\n\n\t\tfor(i = 0; i < radiusPlus1; i++) {\n\t\t\tstack.r = pr\n\t\t\tstack.g = pg\n\t\t\tstack.b = pb\n\t\t\tstack.a = pa\n\t\t\tstack = stack.next\n\t\t}\n\n\t\typ = width\n\n\t\tfor(i = 1; i <= radius; i++) {\n\t\t\tyi = ( yp + x ) << 2\n\n\t\t\tr_sum += (stack.r = (pr = pixels[yi])) * (rbs = radiusPlus1 - i)\n\t\t\tg_sum += ( stack.g = ( pg = pixels[yi+1])) * rbs\n\t\t\tb_sum += ( stack.b = ( pb = pixels[yi+2])) * rbs\n\t\t\ta_sum += ( stack.a = ( pa = pixels[yi+3])) * rbs\n\t\t\tr_in_sum += pr\n\t\t\tg_in_sum += pg\n\t\t\tb_in_sum += pb\n\t\t\ta_in_sum += pa\n\n\t\t\tstack = stack.next\n\n\t\t\tif(i < heightMinus1) {\n\t\t\t\typ += width\n\t\t\t}\n\t\t}\n\n\t\tyi = x\n\t\tstackIn = stackStart\n\t\tstackOut = stackEnd\n\t\tfor (y = 0; y < height; y++) {\n\t\t\tp = yi << 2\n\t\t\tpixels[p+3] = pa = (a_sum * mul_sum) >> shg_sum\n\t\t\tif (pa > 0) {\n\t\t\t\tpa = 255 / pa\n\t\t\t\tpixels[p]   = ((r_sum * mul_sum) >> shg_sum) * pa\n\t\t\t\tpixels[p+1] = ((g_sum * mul_sum) >> shg_sum) * pa\n\t\t\t\tpixels[p+2] = ((b_sum * mul_sum) >> shg_sum) * pa\n\t\t\t} else {\n\t\t\t\tpixels[p] = pixels[p+1] = pixels[p+2] = 0\n\t\t\t}\n\n\t\t\tr_sum -= r_out_sum\n\t\t\tg_sum -= g_out_sum\n\t\t\tb_sum -= b_out_sum\n\t\t\ta_sum -= a_out_sum\n\n\t\t\tr_out_sum -= stackIn.r\n\t\t\tg_out_sum -= stackIn.g\n\t\t\tb_out_sum -= stackIn.b\n\t\t\ta_out_sum -= stackIn.a\n\n\t\t\tp = (x + ((( p = y + radiusPlus1) < heightMinus1 ?\n\t\t\t\tp : heightMinus1 ) * width)) << 2\n\n\t\t\tr_sum += (r_in_sum += (stackIn.r = pixels[p]))\n\t\t\tg_sum += (g_in_sum += (stackIn.g = pixels[p+1]))\n\t\t\tb_sum += (b_in_sum += (stackIn.b = pixels[p+2]))\n\t\t\ta_sum += (a_in_sum += (stackIn.a = pixels[p+3]))\n\n\t\t\tstackIn = stackIn.next\n\n\t\t\tr_out_sum += (pr = stackOut.r)\n\t\t\tg_out_sum += (pg = stackOut.g)\n\t\t\tb_out_sum += (pb = stackOut.b)\n\t\t\ta_out_sum += (pa = stackOut.a)\n\n\t\t\tr_in_sum -= pr\n\t\t\tg_in_sum -= pg\n\t\t\tb_in_sum -= pb\n\t\t\ta_in_sum -= pa\n\n\t\t\tstackOut = stackOut.next\n\n\t\t\tyi += width\n\t\t}\n\t}\n\n\tcontext.putImageData(imageData, top_x, top_y)\n}\n\nclass BlurStack {\n\tr: number = 0\n\tg: number = 0\n\tb: number = 0\n\ta: number = 0\n\tnext: BlurStack\n\tconstructor() {}\n}\n"],"sourceRoot":"/source/"}