{"version":3,"sources":["options/specs.ts"],"names":[],"mappings":";;;;QAoBa,WAAW,EAGX,eAAe,EAGf,MAAM,EA2CN,KAAK,EAuMZ,MAAM;IAgBZ,yBAAyB,EAAU,EAAE,GAAW;QAC/C,MAAM,CAAC,MAAM;YACZ,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAClC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,cAAO,CAAC,cAAc,EAAE,KAAK,GAAG,UAAU,CAAC,CAAC,CAAA;YAClE,CAAC;YAID,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,QAAQ,GAAG,CAAC,MAAM,CAAA;QAC/C,CAAC,CAAA;IACF,CAAC;;;;;;;;;;;;;YAlRY,yBAAA,WAAW,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA,CAAA;YAGxC,6BAAA,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,CAAC,CAAA,CAAA;YAG7D,oBAAA,MAAM,GAAG;gBACrB,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO;gBACnE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO;aAClC,CAAA,CAAA;YAwCY,mBAAA,KAAK,GAAiB;gBAElC;oBACC,EAAE,EAAE,MAAM;oBACV,IAAI,EAAE,CAAe;oBACrB,IAAI,EAAE,cAAM,CAAC,IAAI,CAAC,OAAO;oBACzB,GAAG,EAAE,CAAY;oBACjB,OAAO,EAAE,cAAM,CAAC,IAAI,CAAC,OAAO;oBAC5B,aAAa,EAAE,IAAI;oBACnB,IAAI;wBACH,KAAK,CAAC,WAAI,CAAC,WAAW,CAAC,CAAA;wBACvB,QAAQ,CAAC,MAAM,EAAE,CAAA;oBAClB,CAAC;iBACD;gBAED;oBACC,EAAE,EAAE,WAAW;oBACf,IAAI,EAAE,CAAe;oBACrB,IAAI,EAAE,eAAe;oBACrB,GAAG,EAAE,CAAU;oBACf,OAAO,EAAE,OAAO;iBAChB;gBAED;oBACC,EAAE,EAAE,QAAQ;oBACZ,IAAI,EAAE,CAAe;oBACrB,IAAI,EAAE,WAAW;oBACjB,GAAG,EAAE,CAAU;oBACf,OAAO,EAAE,OAAO;iBAChB;gBAED;oBACC,EAAE,EAAE,YAAY;oBAChB,OAAO,EAAE,IAAI;oBACb,MAAM,EAAE,gBAAQ;oBAChB,GAAG,EAAE,CAAY;iBACjB;gBAED;oBACC,EAAE,EAAE,WAAW;oBACf,MAAM,EAAE,gBAAQ;oBAChB,GAAG,EAAE,CAAY;iBACjB;gBAED;oBACC,EAAE,EAAE,SAAS;oBACb,MAAM,EAAE,gBAAQ;oBAChB,GAAG,EAAE,CAAU;iBACf;gBAED;oBACC,EAAE,EAAE,UAAU;oBACd,GAAG,EAAE,CAAU;oBACf,OAAO,EAAE,IAAI;iBACb;gBAED;oBACC,EAAE,EAAE,cAAc;oBAClB,GAAG,EAAE,CAAY;oBACjB,IAAI,CAAC,MAAM;wBACV,EAAE,CAAC,CAAC,MAAM,IAAI,YAAY,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC;4BACrD,YAAY,CAAC,iBAAiB,EAAE,CAAA;wBACjC,CAAC;oBACF,CAAC;iBACD;gBAED;oBACC,EAAE,EAAE,WAAW;oBACf,GAAG,EAAE,CAAY;iBACjB;gBAED;oBACC,EAAE,EAAE,cAAc;oBAClB,GAAG,EAAE,CAAY;oBACjB,OAAO,EAAE,KAAK;iBACd;gBAED;oBACC,EAAE,EAAE,YAAY;oBAChB,MAAM,EAAE,gBAAQ,IAAI,CAAC,cAAM,CAAC,KAAK;oBACjC,GAAG,EAAE,CAAQ;oBACb,OAAO,EAAE,IAAI;oBACb,IAAI,CAAC,MAAM;wBACV,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;wBAIb,CAAC;wBAAC,IAAI,CAAC,CAAC;wBAGR,CAAC;oBACF,CAAC;iBACD;gBAED;oBACC,EAAE,EAAE,YAAY;oBAChB,MAAM,EAAE,gBAAQ,IAAI,CAAC,cAAM,CAAC,UAAU;oBACtC,GAAG,EAAE,CAAQ;iBACb;gBAED;oBACC,EAAE,EAAE,gBAAgB;oBACpB,MAAM,EAAE,gBAAQ,IAAI,CAAC,cAAM,CAAC,UAAU;oBACtC,GAAG,EAAE,CAAQ;iBACb;gBAED;oBACC,EAAE,EAAE,mBAAmB;oBACvB,GAAG,EAAE,CAAQ;oBACb,IAAI,EAAE,eAAe,CACpB,YAAY,EACZ,sCAAsC,CACtC;iBACD;gBAED;oBACC,EAAE,EAAE,YAAY;oBAChB,GAAG,EAAE,CAAU;oBACf,IAAI,EAAE,eAAe,CACpB,gBAAgB,EAChB,0CAA0C,CAC1C;iBACD;gBAED;oBACC,EAAE,EAAE,OAAO;oBACX,IAAI,EAAE,CAAe;oBACrB,IAAI,EAAE,MAAM;oBACZ,GAAG,EAAE,CAAU;oBACf,OAAO,EAAE,cAAM,CAAC,UAAU;oBAC1B,aAAa,EAAE,IAAI;oBACnB,IAAI,CAAC,KAAK;wBACT,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;4BACZ,MAAM,CAAA;wBACP,CAAC;wBACD,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,YAAY,CAC5C,MAAM,EACN,YAAY,KAAK,MAAM,CACvB,CAAA;oBACF,CAAC;iBACD;gBAED;oBACC,EAAE,EAAE,QAAQ;oBACZ,MAAM,EAAE,gBAAQ;oBAChB,GAAG,EAAE,CAAU;iBACf;gBAED;oBACC,EAAE,EAAE,aAAa;oBACjB,MAAM,EAAE,gBAAQ;oBAChB,IAAI,EAAE,CAAgB;oBACtB,GAAG,EAAE,CAAU;oBACf,aAAa,EAAE,IAAI;oBACnB,IAAI,CAAC,MAAM;oBAGX,CAAC;iBACD;gBAED;oBACC,EAAE,EAAE,OAAO;oBACX,IAAI,EAAE,CAAiB;oBACvB,GAAG,EAAE,CAAY;oBACjB,UAAU,CAAC,CAAS;wBACnB,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAA;oBACvC,CAAC;oBACD,OAAO,EAAE,GAAG;iBACZ;gBAUD;oBACC,EAAE,EAAE,YAAY;oBAChB,GAAG,EAAE,CAAY;iBACjB;aACD,CAAA,CAAA;YAiBK,MAAM,GAAQ;gBACnB,EAAC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,EAAC;gBAC5B,EAAC,EAAE,EAAE,eAAe,EAAE,OAAO,EAAE,EAAE,EAAC;gBAClC,EAAC,EAAE,EAAE,aAAa,EAAE,OAAO,EAAE,EAAE,EAAC;gBAChC,EAAC,EAAE,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAC;gBACzB,EAAC,EAAE,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,EAAC;gBAC9B,EAAC,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,EAAE,EAAC;aAC7B,CAAA;YACD,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC1B,KAAK,CAAC,IAAI,GAAG,CAAmB,CAAA;gBAChC,KAAK,CAAC,GAAG,GAAG,CAAc,CAAA;gBAC1B,KAAK,CAAC,MAAM,GAAG,gBAAQ,CAAA;gBACvB,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;YAClB,CAAC","file":"options/specs.js","sourcesContent":["/*\n Specs for individual option models\n*/\n\nimport {config, isMobile} from '../state'\nimport {opts as lang} from '../lang'\nimport {parseEl} from '../util'\nimport {OptionID} from '../options'\n\n// TODO: Send function\n\n// Types of option models\nexport const enum optionType {checkbox, number, image, shortcut, menu}\n\n// Options panel display tabs\nexport const enum tabs {general, style, imagesearch, fun, shortcuts}\n\n// Can't  use enums for ones below, because they persist to localStorage\n\n// Available thumbnail display styles\nexport const thumbStyles = ['small', 'sharp', 'hide']\n\n// Thumbnail expansion modes\nexport const thumbExpansions = ['none', 'full', 'height', 'width', 'both']\n\n// Available themes\nexport const themes = [\n\t'moe', 'gar', 'mawaru', 'moon', 'ashita', 'console', 'tea', 'higan',\n\t'ocean', 'rave', 'tavern', 'glass'\n]\n\nexport type OptionValue =  boolean|string|number\n\n// Full schema of the option interface\nexport type OptionSpec = {\n\t// Identifier of the option. Used for DOM element and localStorage tagging\n\tid: OptionID\n\n\t// Type of option. Determines storage and rendering method. Defaults to\n\t// 'checkbox', if omitted.\n\ttype?: optionType\n\n\t// Index of the tab the option belong to\n\ttab: tabs\n\n\t// Items to place in a <select> list\n\tlist?: string[]\n\n\t// Default value. false, if omitted.\n\tdefault?: OptionValue\n\n\t// Function to execute on option change\n\texec?: (val?: OptionValue) => void\n\n\t// Should the function not be executed on model population?\n\tnoExecOnStart?: boolean\n\n\t// Condition, when not to display and execute the option\n\tnoLoad?: boolean\n\n\t// Function that validates the users input\n\tvalidation?: (val: OptionValue) => boolean\n\n\t// Don't show the option to the user in the option's panel\n\thidden?: boolean\n}\n\n// Option parse and position in the options panel is defined by order in the\n// array.\nexport const specs: OptionSpec[] = [\n\t// Language selection\n\t{\n\t\tid: 'lang',\n\t\ttype: optionType.menu,\n\t\tlist: config.lang.enabled,\n\t\ttab: tabs.general,\n\t\tdefault: config.lang.default,\n\t\tnoExecOnStart: true,\n\t\texec() {\n\t\t\talert(lang.langApplied)\n\t\t\tlocation.reload()\n\t\t}\n\t},\n\t// Thumbnail inline expansion mode\n\t{\n\t\tid: 'inlineFit',\n\t\ttype: optionType.menu,\n\t\tlist: thumbExpansions,\n\t\ttab: tabs.style,\n\t\tdefault: 'width'\n\t},\n\t// Thumbnail display style\n\t{\n\t\tid: 'thumbs',\n\t\ttype: optionType.menu,\n\t\tlist: thumbStyles,\n\t\ttab: tabs.style,\n\t\tdefault: 'small'\n\t},\n\t// Image hover expansion\n\t{\n\t\tid: 'imageHover',\n\t\tdefault: true,\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.general\n\t},\n\t// WebM hover expansion\n\t{\n\t\tid: 'webmHover',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.general\n\t},\n\t// Animated GIF thumbnails\n\t{\n\t\tid: 'autogif',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.style\n\t},\n\t// Enable thumnail spoilers\n\t{\n\t\tid: 'spoilers',\n\t\ttab: tabs.style,\n\t\tdefault: true\n\t},\n\t// Desktop Notifications\n\t{\n\t\tid: 'notification',\n\t\ttab: tabs.general,\n\t\texec(toggle) {\n\t\t\tif (toggle && Notification.permission !== \"granted\") {\n\t\t\t\tNotification.requestPermission()\n\t\t\t}\n\t\t}\n\t},\n\t// Anonymise all poster names\n\t{\n\t\tid: 'anonymise',\n\t\ttab: tabs.general\n\t},\n\t// Relative post timestamps\n\t{\n\t\tid: 'relativeTime',\n\t\ttab: tabs.general,\n\t\tdefault: false\n\t},\n\t// R/a/dio now playing banner\n\t{\n\t\tid: 'nowPlaying',\n\t\tnoLoad: isMobile || !config.radio,\n\t\ttab: tabs.fun,\n\t\tdefault: true,\n\t\texec(toggle) {\n\t\t\tif (toggle) {\n\t\t\t\t// TODO: Implement send()\n\t\t\t\t// Query the server for current stream info\n\t\t\t\t// send({type: 'radio'})\n\t\t\t} else {\n\t\t\t\t// TODO: System.import().then()\n\t\t\t\t//events.request('banner:radio:clear');\n\t\t\t}\n\t\t}\n\t},\n\t// Illya dance in the background\n\t{\n\t\tid: 'illyaDance',\n\t\tnoLoad: isMobile || !config.illyaDance,\n\t\ttab: tabs.fun\n\t},\n\t// Mute Illya dance\n\t{\n\t\tid: 'illyaDanceMute',\n\t\tnoLoad: isMobile || !config.illyaDance,\n\t\ttab: tabs.fun\n\t},\n\t// Tile posts horizontally too\n\t{\n\t\tid: 'horizontalPosting',\n\t\ttab: tabs.fun,\n\t\texec: toggleHeadStyle(\n\t\t\t'horizontal',\n\t\t\t'article,aside{display:inline-block;}'\n\t\t)\n\t},\n\t// Move [Reply] to the right side of the screen\n\t{\n\t\tid: 'replyRight',\n\t\ttab: tabs.style,\n\t\texec: toggleHeadStyle(\n\t\t\t'reply-at-right',\n\t\t\t'section>aside{margin: -26px 0 2px auto;}'\n\t\t)\n\t},\n\t// Change theme\n\t{\n\t\tid: 'theme',\n\t\ttype: optionType.menu,\n\t\tlist: themes,\n\t\ttab: tabs.style,\n\t\tdefault: config.defaultCSS,\n\t\tnoExecOnStart: true,\n\t\texec(theme) {\n\t\t\tif (!theme) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdocument.getElementById('theme').setAttribute(\n\t\t\t\t'href',\n\t\t\t\t`/ass/css/${theme}.css`\n\t\t\t)\n\t\t}\n\t},\n\t// Custom user-set background\n\t{\n\t\tid: 'userBG',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.style\n\t},\n\t// Upload field for the custom background image\n\t{\n\t\tid: 'userBGImage',\n\t\tnoLoad: isMobile,\n\t\ttype: optionType.image,\n\t\ttab: tabs.style,\n\t\tnoExecOnStart: true,\n\t\texec(upload) {\n\t\t\t// TODO: System.import().then()\n\t\t\t//events.request('background:store', upload)\n\t\t}\n\t},\n\t// Last N posts to display in a thread, if viewing in Last N mode\n\t{\n\t\tid: 'lastN',\n\t\ttype: optionType.number,\n\t\ttab: tabs.general,\n\t\tvalidation(n: number) {\n\t\t\treturn Number.isInteger(n) && n <= 500\n\t\t},\n\t\tdefault: 100\n\t},\n\t// KEEP THREAD LENGTH WITHIN LASTN\n\t/*\n\t Disabled, until dependancy features are implemnted (see issue #280)\n\t{\n\t\tid: 'postUnloading',\n\t\ttab: 0\n\t},*/\n\t// Lock thread scrolling to bottom, when bottom in view, even when the tab\n\t// is hidden\n\t{\n\t\tid: 'alwaysLock',\n\t\ttab: tabs.general\n\t}\n]\n\n// TODO: Selective rendering logic\n//\n// Image search link toggle\n// for (let engine of ['google', 'iqdb', 'saucenao', 'desustorage', 'exhentai']) {\n// \topts.push({\n// \t\tid: engine,\n// \t\t// Use a custom internatiolisation function\n// \t\tlang: 'imageSearch',\n// \t\ttab: 2,\n// \t\tdefault: engine === 'google',\n// \t\texec: toggleHeadStyle(engine + 'Toggle', `.${engine}{display:initial;}`)\n// \t})\n// }\n\n// SHORTCUT KEYS\nconst shorts: any = [\n\t{id: 'newPost', default: 78},\n\t{id: 'toggleSpoiler', default: 73},\n\t{id: 'textSpoiler', default: 68},\n\t{id: 'done', default: 83},\n\t{id: 'expandAll', default: 69},\n\t{id: 'workMode', default: 66}\n]\nfor (let short of shorts) {\n\tshort.type = optionType.shortcut\n\tshort.tab = tabs.shortcuts\n\tshort.noLoad = isMobile\n\tspecs.push(short)\n}\n\n// Create a function to append and toggle a style element in <head>\nfunction toggleHeadStyle(id: string, css: string): (toggle: boolean) => void {\n\treturn toggle => {\n\t\tif (!document.getElementById(id)) {\n\t\t\tdocument.head.append(parseEl(`<style id=\"${id}\">${css}</style>`))\n\t\t}\n\n\t\t// The disabled property only exists on elements in the DOM, so we do\n\t\t// another query\n\t\tdocument.getElementById(id).disabled = !toggle\n\t}\n}\n"],"sourceRoot":"/source/"}