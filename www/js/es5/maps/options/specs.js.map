{"version":3,"sources":["options/specs.js","options/specs.ts"],"names":["System","register","exports_1","context_1","toggleHeadStyle","id","css","toggle","document","getElementById","head","append","util_1","parseEl","disabled","state_1","lang_1","thumbStyles","thumbExpansions","themes","specs","shorts","setters","state_1_1","lang_1_1","util_1_1","execute","type","list","config","lang","enabled","tab","default","noExecOnStart","exec","alert","opts","langApplied","location","reload","noLoad","isMobile","Notification","permission","requestPermission","radio","illyaDance","defaultCSS","theme","setAttribute","upload","validation","n","Number","isInteger","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","short","value","push","err"],"mappings":"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","file":"options/specs.js","sourcesContent":["System.register(['../state', '../lang', '../util'], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var state_1, lang_1, util_1;\n    var thumbStyles, thumbExpansions, themes, specs, shorts;\n    function toggleHeadStyle(id, css) {\n        return toggle => {\n            if (!document.getElementById(id)) {\n                document.head.append(util_1.parseEl(`<style id=\"${id}\">${css}</style>`));\n            }\n            document.getElementById(id).disabled = !toggle;\n        };\n    }\n    return {\n        setters:[\n            function (state_1_1) {\n                state_1 = state_1_1;\n            },\n            function (lang_1_1) {\n                lang_1 = lang_1_1;\n            },\n            function (util_1_1) {\n                util_1 = util_1_1;\n            }],\n        execute: function() {\n            exports_1(\"thumbStyles\", thumbStyles = ['small', 'sharp', 'hide']);\n            exports_1(\"thumbExpansions\", thumbExpansions = ['none', 'full', 'height', 'width', 'both']);\n            exports_1(\"themes\", themes = [\n                'moe', 'gar', 'mawaru', 'moon', 'ashita', 'console', 'tea', 'higan',\n                'ocean', 'rave', 'tavern', 'glass'\n            ]);\n            exports_1(\"specs\", specs = [\n                {\n                    id: 'lang',\n                    type: 4,\n                    list: state_1.config.lang.enabled,\n                    tab: 0,\n                    default: state_1.config.lang.default,\n                    noExecOnStart: true,\n                    exec() {\n                        alert(lang_1.opts.langApplied);\n                        location.reload();\n                    }\n                },\n                {\n                    id: 'inlineFit',\n                    type: 4,\n                    list: thumbExpansions,\n                    tab: 1,\n                    default: 'width'\n                },\n                {\n                    id: 'thumbs',\n                    type: 4,\n                    list: thumbStyles,\n                    tab: 1,\n                    default: 'small'\n                },\n                {\n                    id: 'imageHover',\n                    default: true,\n                    noLoad: state_1.isMobile,\n                    tab: 0\n                },\n                {\n                    id: 'webmHover',\n                    noLoad: state_1.isMobile,\n                    tab: 0\n                },\n                {\n                    id: 'autogif',\n                    noLoad: state_1.isMobile,\n                    tab: 1\n                },\n                {\n                    id: 'spoilers',\n                    tab: 1,\n                    default: true\n                },\n                {\n                    id: 'notification',\n                    tab: 0,\n                    exec(toggle) {\n                        if (toggle && Notification.permission !== \"granted\") {\n                            Notification.requestPermission();\n                        }\n                    }\n                },\n                {\n                    id: 'anonymise',\n                    tab: 0\n                },\n                {\n                    id: 'relativeTime',\n                    tab: 0,\n                    default: false\n                },\n                {\n                    id: 'nowPlaying',\n                    noLoad: state_1.isMobile || !state_1.config.radio,\n                    tab: 3,\n                    default: true,\n                    exec(toggle) {\n                        if (toggle) {\n                        }\n                        else {\n                        }\n                    }\n                },\n                {\n                    id: 'illyaDance',\n                    noLoad: state_1.isMobile || !state_1.config.illyaDance,\n                    tab: 3\n                },\n                {\n                    id: 'illyaDanceMute',\n                    noLoad: state_1.isMobile || !state_1.config.illyaDance,\n                    tab: 3\n                },\n                {\n                    id: 'horizontalPosting',\n                    tab: 3,\n                    exec: toggleHeadStyle('horizontal', 'article,aside{display:inline-block;}')\n                },\n                {\n                    id: 'replyRight',\n                    tab: 1,\n                    exec: toggleHeadStyle('reply-at-right', 'section>aside{margin: -26px 0 2px auto;}')\n                },\n                {\n                    id: 'theme',\n                    type: 4,\n                    list: themes,\n                    tab: 1,\n                    default: state_1.config.defaultCSS,\n                    noExecOnStart: true,\n                    exec(theme) {\n                        if (!theme) {\n                            return;\n                        }\n                        document.getElementById('theme').setAttribute('href', `/ass/css/${theme}.css`);\n                    }\n                },\n                {\n                    id: 'userBG',\n                    noLoad: state_1.isMobile,\n                    tab: 1\n                },\n                {\n                    id: 'userBGImage',\n                    noLoad: state_1.isMobile,\n                    type: 2,\n                    tab: 1,\n                    noExecOnStart: true,\n                    exec(upload) {\n                    }\n                },\n                {\n                    id: 'lastN',\n                    type: 1,\n                    tab: 0,\n                    validation(n) {\n                        return Number.isInteger(n) && n <= 500;\n                    },\n                    default: 100\n                },\n                {\n                    id: 'alwaysLock',\n                    tab: 0\n                }\n            ]);\n            shorts = [\n                { id: 'newPost', default: 78 },\n                { id: 'toggleSpoiler', default: 73 },\n                { id: 'textSpoiler', default: 68 },\n                { id: 'done', default: 83 },\n                { id: 'expandAll', default: 69 },\n                { id: 'workMode', default: 66 }\n            ];\n            for (let short of shorts) {\n                short.type = 3;\n                short.tab = 4;\n                short.noLoad = state_1.isMobile;\n                specs.push(short);\n            }\n        }\n    }\n});\n","/*\n Specs for individual option models\n*/\n\nimport {config, isMobile} from '../state'\nimport {opts as lang} from '../lang'\nimport {parseEl} from '../util'\nimport {OptionID} from '../options'\n\n// TODO: Send function\n\n// Types of option models\nexport const enum optionType {checkbox, number, image, shortcut, menu}\n\n// Options panel display tabs\nexport const enum tabs {general, style, imagesearch, fun, shortcuts}\n\n// Can't  use enums for ones below, because they persist to localStorage\n\n// Available thumbnail display styles\nexport const thumbStyles = ['small', 'sharp', 'hide']\n\n// Thumbnail expansion modes\nexport const thumbExpansions = ['none', 'full', 'height', 'width', 'both']\n\n// Available themes\nexport const themes = [\n\t'moe', 'gar', 'mawaru', 'moon', 'ashita', 'console', 'tea', 'higan',\n\t'ocean', 'rave', 'tavern', 'glass'\n]\n\nexport type OptionValue =  boolean|string|number\n\n// Full schema of the option interface\nexport type OptionSpec = {\n\t// Identifier of the option. Used for DOM element and localStorage tagging\n\tid: OptionID\n\n\t// Type of option. Determines storage and rendering method. Defaults to\n\t// 'checkbox', if omitted.\n\ttype?: optionType\n\n\t// Index of the tab the option belong to\n\ttab: tabs\n\n\t// Items to place in a <select> list\n\tlist?: string[]\n\n\t// Default value. false, if omitted.\n\tdefault?: OptionValue\n\n\t// Function to execute on option change\n\texec?: (val?: OptionValue) => void\n\n\t// Should the function not be executed on model population?\n\tnoExecOnStart?: boolean\n\n\t// Condition, when not to display and execute the option\n\tnoLoad?: boolean\n\n\t// Function that validates the users input\n\tvalidation?: (val: OptionValue) => boolean\n\n\t// Don't show the option to the user in the option's panel\n\thidden?: boolean\n}\n\n// Option parse and position in the options panel is defined by order in the\n// array.\nexport const specs: OptionSpec[] = [\n\t// Language selection\n\t{\n\t\tid: 'lang',\n\t\ttype: optionType.menu,\n\t\tlist: config.lang.enabled,\n\t\ttab: tabs.general,\n\t\tdefault: config.lang.default,\n\t\tnoExecOnStart: true,\n\t\texec() {\n\t\t\talert(lang.langApplied)\n\t\t\tlocation.reload()\n\t\t}\n\t},\n\t// Thumbnail inline expansion mode\n\t{\n\t\tid: 'inlineFit',\n\t\ttype: optionType.menu,\n\t\tlist: thumbExpansions,\n\t\ttab: tabs.style,\n\t\tdefault: 'width'\n\t},\n\t// Thumbnail display style\n\t{\n\t\tid: 'thumbs',\n\t\ttype: optionType.menu,\n\t\tlist: thumbStyles,\n\t\ttab: tabs.style,\n\t\tdefault: 'small'\n\t},\n\t// Image hover expansion\n\t{\n\t\tid: 'imageHover',\n\t\tdefault: true,\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.general\n\t},\n\t// WebM hover expansion\n\t{\n\t\tid: 'webmHover',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.general\n\t},\n\t// Animated GIF thumbnails\n\t{\n\t\tid: 'autogif',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.style\n\t},\n\t// Enable thumnail spoilers\n\t{\n\t\tid: 'spoilers',\n\t\ttab: tabs.style,\n\t\tdefault: true\n\t},\n\t// Desktop Notifications\n\t{\n\t\tid: 'notification',\n\t\ttab: tabs.general,\n\t\texec(toggle) {\n\t\t\tif (toggle && Notification.permission !== \"granted\") {\n\t\t\t\tNotification.requestPermission()\n\t\t\t}\n\t\t}\n\t},\n\t// Anonymise all poster names\n\t{\n\t\tid: 'anonymise',\n\t\ttab: tabs.general\n\t},\n\t// Relative post timestamps\n\t{\n\t\tid: 'relativeTime',\n\t\ttab: tabs.general,\n\t\tdefault: false\n\t},\n\t// R/a/dio now playing banner\n\t{\n\t\tid: 'nowPlaying',\n\t\tnoLoad: isMobile || !config.radio,\n\t\ttab: tabs.fun,\n\t\tdefault: true,\n\t\texec(toggle) {\n\t\t\tif (toggle) {\n\t\t\t\t// TODO: Implement send()\n\t\t\t\t// Query the server for current stream info\n\t\t\t\t// send({type: 'radio'})\n\t\t\t} else {\n\t\t\t\t// TODO: System.import().then()\n\t\t\t\t//events.request('banner:radio:clear');\n\t\t\t}\n\t\t}\n\t},\n\t// Illya dance in the background\n\t{\n\t\tid: 'illyaDance',\n\t\tnoLoad: isMobile || !config.illyaDance,\n\t\ttab: tabs.fun\n\t},\n\t// Mute Illya dance\n\t{\n\t\tid: 'illyaDanceMute',\n\t\tnoLoad: isMobile || !config.illyaDance,\n\t\ttab: tabs.fun\n\t},\n\t// Tile posts horizontally too\n\t{\n\t\tid: 'horizontalPosting',\n\t\ttab: tabs.fun,\n\t\texec: toggleHeadStyle(\n\t\t\t'horizontal',\n\t\t\t'article,aside{display:inline-block;}'\n\t\t)\n\t},\n\t// Move [Reply] to the right side of the screen\n\t{\n\t\tid: 'replyRight',\n\t\ttab: tabs.style,\n\t\texec: toggleHeadStyle(\n\t\t\t'reply-at-right',\n\t\t\t'section>aside{margin: -26px 0 2px auto;}'\n\t\t)\n\t},\n\t// Change theme\n\t{\n\t\tid: 'theme',\n\t\ttype: optionType.menu,\n\t\tlist: themes,\n\t\ttab: tabs.style,\n\t\tdefault: config.defaultCSS,\n\t\tnoExecOnStart: true,\n\t\texec(theme) {\n\t\t\tif (!theme) {\n\t\t\t\treturn\n\t\t\t}\n\t\t\tdocument.getElementById('theme').setAttribute(\n\t\t\t\t'href',\n\t\t\t\t`/ass/css/${theme}.css`\n\t\t\t)\n\t\t}\n\t},\n\t// Custom user-set background\n\t{\n\t\tid: 'userBG',\n\t\tnoLoad: isMobile,\n\t\ttab: tabs.style\n\t},\n\t// Upload field for the custom background image\n\t{\n\t\tid: 'userBGImage',\n\t\tnoLoad: isMobile,\n\t\ttype: optionType.image,\n\t\ttab: tabs.style,\n\t\tnoExecOnStart: true,\n\t\texec(upload) {\n\t\t\t// TODO: System.import().then()\n\t\t\t//events.request('background:store', upload)\n\t\t}\n\t},\n\t// Last N posts to display in a thread, if viewing in Last N mode\n\t{\n\t\tid: 'lastN',\n\t\ttype: optionType.number,\n\t\ttab: tabs.general,\n\t\tvalidation(n: number) {\n\t\t\treturn Number.isInteger(n) && n <= 500\n\t\t},\n\t\tdefault: 100\n\t},\n\t// KEEP THREAD LENGTH WITHIN LASTN\n\t/*\n\t Disabled, until dependancy features are implemnted (see issue #280)\n\t{\n\t\tid: 'postUnloading',\n\t\ttab: 0\n\t},*/\n\t// Lock thread scrolling to bottom, when bottom in view, even when the tab\n\t// is hidden\n\t{\n\t\tid: 'alwaysLock',\n\t\ttab: tabs.general\n\t}\n]\n\n// TODO: Selective rendering logic\n//\n// Image search link toggle\n// for (let engine of ['google', 'iqdb', 'saucenao', 'desustorage', 'exhentai']) {\n// \topts.push({\n// \t\tid: engine,\n// \t\t// Use a custom internatiolisation function\n// \t\tlang: 'imageSearch',\n// \t\ttab: 2,\n// \t\tdefault: engine === 'google',\n// \t\texec: toggleHeadStyle(engine + 'Toggle', `.${engine}{display:initial;}`)\n// \t})\n// }\n\n// SHORTCUT KEYS\nconst shorts: any = [\n\t{id: 'newPost', default: 78},\n\t{id: 'toggleSpoiler', default: 73},\n\t{id: 'textSpoiler', default: 68},\n\t{id: 'done', default: 83},\n\t{id: 'expandAll', default: 69},\n\t{id: 'workMode', default: 66}\n]\nfor (let short of shorts) {\n\tshort.type = optionType.shortcut\n\tshort.tab = tabs.shortcuts\n\tshort.noLoad = isMobile\n\tspecs.push(short)\n}\n\n// Create a function to append and toggle a style element in <head>\nfunction toggleHeadStyle(id: string, css: string): (toggle: boolean) => void {\n\treturn toggle => {\n\t\tif (!document.getElementById(id)) {\n\t\t\tdocument.head.append(parseEl(`<style id=\"${id}\">${css}</style>`))\n\t\t}\n\n\t\t// The disabled property only exists on elements in the DOM, so we do\n\t\t// another query\n\t\tdocument.getElementById(id).disabled = !toggle\n\t}\n}\n"],"sourceRoot":"/source/"}