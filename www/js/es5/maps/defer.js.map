{"version":3,"sources":["defer.js","defer.ts"],"names":["System","register","exports_1","context_1","defer","func","deferred","push","exec","length","shift","id","setters","execute"],"mappings":"AAAA,YAAAA,QAAOC,YAAa,SAASC,EAAWC,GCWxC,QAAAC,GAAsBC,GACrBC,EAASC,KAAKF,GAIf,QAAAG,KACC,KAAOF,EAASG,OAAS,GACxBH,EAASI,UDhBP,GCMEJ,EDNiBH,IAAaA,EAAUQ,EAY1C,OCHJT,GAAA,QAAAE,GAKAF,EAAA,OAAAM,IDDQI,WACAC,QAAS,WCRXP","file":"defer.js","sourcesContent":["System.register([], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var deferred;\n    function defer(func) {\n        deferred.push(func);\n    }\n    exports_1(\"defer\", defer);\n    function exec() {\n        while (deferred.length > 0) {\n            deferred.shift()();\n        }\n    }\n    exports_1(\"exec\", exec);\n    return {\n        setters:[],\n        execute: function() {\n            deferred = [];\n        }\n    }\n});\n","/*\n Seperate module for defering operations to execute. Helps avoid race\n conditions, circular dependancies and offload less critical expensive\n computations to later.\n*/\n\ntype DeferedFunc = () => void\n\nconst deferred: DeferedFunc[] = []\n\n// Add a function to be executed, once the module finishes loading\nexport function defer(func: DeferedFunc) {\n\tdeferred.push(func)\n}\n\n// Execute all stored deferred functions\nexport function exec() {\n\twhile (deferred.length > 0) {\n\t\tdeferred.shift()()\n\t}\n}\n"],"sourceRoot":"/source/"}