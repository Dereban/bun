{"version":3,"sources":["posts/render/posts.js","posts/render/posts.ts"],"names":["_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value","_templateObject","_templateObject2","_templateObject3","System","register","exports_1","context_1","renderSection","data","cls","arguments","length","undefined","locked","editing","largeThumb","util_1","parseHTML","id","toString","renderPost","renderArticle","backlinks","body","header_1","renderHeader","image","image_1","renderImage","body_1","renderBody","etc_1","renderBacklinks","setters","util_1_1","header_1_1","image_1_1","etc_1_1","body_1_1","execute"],"mappings":"AAAA,YAMA,SAASA,wBAAuBC,EAASC,GAAO,MAAOC,QAAOC,OAAOD,OAAOE,iBAAiBJ,GAAWC,KAAOI,MAAOH,OAAOC,OAAOF,OAJpI,GAAIK,iBAAkBP,wBAAwB,iBAAkB,YAAa,8CAAsD,8DAAwE,iBAAkB,YAAa,8CAAsD,8DAC5RQ,iBAAmBR,wBAAwB,iBAAkB,YAAa,UAAc,mBAAsB,iBAAkB,YAAa,UAAc,mBAC3JS,iBAAmBT,wBAAwB,GAAI,OAAU,qDAA+D,uCAAkD,4BAAkC,GAAI,OAAU,qDAA+D,uCAAkD,2BAJ/UU,QAAOC,UAAU,aAAc,WAAY,UAAW,QAAS,UAAW,SAASC,EAAWC,GCQ9F,QAAAC,GAA8BC,GDMtB,GCNsCC,GAAGC,UAAAC,QAAA,GAAAC,SAAAF,UAAA,GAAW,GAAEA,UAAA,EAS7D,OARIF,GAAKK,SACRJ,GAAO,WAEJD,EAAKM,UACRL,GAAO,YAERD,EAAKO,YAAa,EAEXC,EAAAC,UAASjB,gBACEQ,EAAKU,GAAGC,WAAsBV,EAE3CW,EAAWZ,IAOjB,QAAAa,GAA8Bb,GAC7B,GAAIC,GAAM,OAIV,OAHID,GAAKM,UACRL,GAAO,YAEDO,EAAAC,UAAShB,iBACEO,EAAKU,GAAGC,WAAsBV,EAC5CW,EAAWZ,IAIhB,QAAAY,GAAoBZ,GDHZ,GCIMc,IAAad,EAAnBe,KAAmBf,EAAbc,UAEb,OAAON,GAAAC,UAASf,iBACZsB,EAAAC,aAAajB,GACdA,EAAKkB,MAAQC,EAAAC,YAAYpB,EAAKkB,OAAQ,GAGpCG,EAAAC,WAAWtB,GAGXuB,EAAAC,gBAAgBV,ID/ClB,GACIN,GAAQQ,EAAUG,EAASI,EAAOF,CADnBvB,IAAaA,EAAUY,EAyC1C,OCnCJb,GAAA,gBAAAE,GAmBAF,EAAA,gBAAAgB,IDiBQY,SACI,SAAUC,GACNlB,EAASkB,GAEb,SAAUC,GACNX,EAAWW,GAEf,SAAUC,GACNT,EAAUS,GAEd,SAAUC,GACNN,EAAQM,GAEZ,SAAUC,GACNT,EAASS,IAEjBC,QAAS","file":"posts/render/posts.js","sourcesContent":["System.register(['../../util', './header', './image', './etc', './body'], function(exports_1, context_1) {\n    \"use strict\";\n    var __moduleName = context_1 && context_1.id;\n    var util_1, header_1, image_1, etc_1, body_1;\n    function renderSection(data, cls = '') {\n        if (data.locked) {\n            cls += ' locked';\n        }\n        if (data.editing) {\n            cls += ' editing';\n        }\n        data.largeThumb = true;\n        return util_1.parseHTML `<section id=\"p${data.id.toString()}\" class=\"${cls}\">\n\t\t\t<div class=\"background glass\">\n\t\t\t\t${renderPost(data)}\n\t\t\t\t<span class=\"omit\"></span>\n\t\t\t</div>\n\t\t</section>`;\n    }\n    exports_1(\"renderSection\", renderSection);\n    function renderArticle(data) {\n        let cls = 'glass';\n        if (data.editing) {\n            cls += ' editing';\n        }\n        return util_1.parseHTML `<article id=\"p${data.id.toString()}\" class=\"${cls}\">\n\t\t\t${renderPost(data)}\n\t\t</article>`;\n    }\n    exports_1(\"renderArticle\", renderArticle);\n    function renderPost(data) {\n        const { body, backlinks } = data;\n        return util_1.parseHTML `${header_1.renderHeader(data)}\n\t\t${data.image ? image_1.renderImage(data.image) : ''}\n\t\t<div class=\"container\">\n\t\t\t<blockquote>\n\t\t\t\t${body_1.renderBody(data)}\n\t\t\t</blockquote>\n\t\t\t<small>\n\t\t\t\t${etc_1.renderBacklinks(backlinks)}\n\t\t\t</small>\n\t\t</div>`;\n    }\n    return {\n        setters:[\n            function (util_1_1) {\n                util_1 = util_1_1;\n            },\n            function (header_1_1) {\n                header_1 = header_1_1;\n            },\n            function (image_1_1) {\n                image_1 = image_1_1;\n            },\n            function (etc_1_1) {\n                etc_1 = etc_1_1;\n            },\n            function (body_1_1) {\n                body_1 = body_1_1;\n            }],\n        execute: function() {\n        }\n    }\n});\n","import {parseHTML} from '../../util'\nimport {renderHeader} from './header'\nimport {renderImage} from './image'\nimport {renderBacklinks} from './etc'\nimport {renderBody} from './body'\nimport {PostData} from '../models'\n\n// Render the OP\nexport function renderSection(data: PostData, cls: string = ''): string {\n\tif (data.locked) {\n\t\tcls += ' locked'\n\t}\n\tif (data.editing) {\n\t\tcls += ' editing'\n\t}\n\tdata.largeThumb = true // Larger thumbnails\n\n\treturn parseHTML\n\t\t`<section id=\"p${data.id.toString()}\" class=\"${cls}\">\n\t\t\t<div class=\"background glass\">\n\t\t\t\t${renderPost(data)}\n\t\t\t\t<span class=\"omit\"></span>\n\t\t\t</div>\n\t\t</section>`\n}\n\n// Render a reply post\nexport function renderArticle(data: PostData): string {\n\tlet cls = 'glass'\n\tif (data.editing) {\n\t\tcls += ' editing'\n\t}\n\treturn parseHTML\n\t\t`<article id=\"p${data.id.toString()}\" class=\"${cls}\">\n\t\t\t${renderPost(data)}\n\t\t</article>`\n}\n\nfunction renderPost(data: PostData): string {\n\tconst {body, backlinks} = data\n\n\treturn parseHTML\n\t\t`${renderHeader(data)}\n\t\t${data.image ? renderImage(data.image): ''}\n\t\t<div class=\"container\">\n\t\t\t<blockquote>\n\t\t\t\t${renderBody(data)}\n\t\t\t</blockquote>\n\t\t\t<small>\n\t\t\t\t${renderBacklinks(backlinks)}\n\t\t\t</small>\n\t\t</div>`\n}\n"],"sourceRoot":"/source/"}